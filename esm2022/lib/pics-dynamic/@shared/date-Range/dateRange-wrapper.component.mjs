import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { UntypedFormControl, UntypedFormGroup } from '@angular/forms';
import moment from 'moment/moment';
import * as i0 from "@angular/core";
import * as i1 from "../../@core/service/dynamic-tab-page-service";
import * as i2 from "@angular/router";
import * as i3 from "../../@core/service/data-store.service";
import * as i4 from "@angular/common";
import * as i5 from "@angular/forms";
import * as i6 from "@angular/material/datepicker";
import * as i7 from "@angular/material/input";
import * as i8 from "@angular/material/form-field";
import * as i9 from "@angular/material/radio";
import * as i10 from "@angular/material/tooltip";
const today = new Date();
const currentDate = today.getDate();
const month = today.getMonth();
const year = today.getFullYear();
const currentDay = new Date(year, month, currentDate);
export class DateRangeWrapperComponent {
    dynamicTabPageService;
    route;
    dataStoreService;
    value;
    startDateKey;
    endDateKey;
    valueChange = new EventEmitter();
    disabled;
    minDate = currentDay;
    formioEvent = new EventEmitter();
    rangePicker;
    selectRange;
    daysInput;
    dateRangeForm;
    showFutureDateConfirmation = false;
    allowFutureDate = '';
    isResponse;
    isEdited;
    disableInput = false;
    dayRange;
    enableBtn = true;
    dateDifference = 0;
    predefinedRanges = [0, 30, 45, 60, 90, 120];
    constructor(dynamicTabPageService, route, dataStoreService) {
        this.dynamicTabPageService = dynamicTabPageService;
        this.route = route;
        this.dataStoreService = dataStoreService;
        //
    }
    ngOnInit() {
        this.initForm();
        const loc = window.location.pathname.split('/');
        if (loc[5] && loc[6]) {
            this.getResponseById(loc[5], loc[6]);
        }
        else {
            this.isResponse = false;
        }
        const action = this.dataStoreService.getData('gridAction');
        if (action === 'view') {
            this.disableInput = true;
        }
    }
    getResponseById(formid, resid) {
        this.dynamicTabPageService.getResponseByPageId(resid, formid).subscribe((result) => {
            if (result.data) {
                this.isResponse = true;
                this.dateRangeForm.patchValue({
                    start: moment(result.data.start_date).format(),
                    end: moment(result.data.end_date).format()
                });
                const formValue = this.dateRangeForm.getRawValue();
                const dateRange = {
                    startDateKey: this.startDateKey,
                    startDate: moment(formValue.start).format('YYYY-MM-DD'),
                    endDateKey: this.endDateKey,
                    endDate: moment(formValue.end).format('YYYY-MM-DD')
                };
                this.dateDifference = moment(formValue.end).diff(moment(formValue.start), 'days');
                if (this.predefinedRanges.includes(this.dateDifference)) {
                    this.dayRange = '';
                }
                else {
                    this.dayRange = this.dateDifference;
                }
                this.value = dateRange;
                this.valueChange.emit(dateRange);
                this.formioEvent.emit({ eventName: 'customEvent', data: { value: { dateRange }, type: 'dateRange' } });
            }
        });
    }
    initForm() {
        console.log('currentDay', currentDay);
        this.dateRangeForm = new UntypedFormGroup({
            start: new UntypedFormControl(),
            end: new UntypedFormControl()
        });
    }
    resetForm() {
        console.log('currentDay', currentDay);
        this.dateRangeForm.patchValue({
            start: null,
            end: null
        });
    }
    selectedDateRange() {
        const formValue = this.dateRangeForm.getRawValue();
        if (new Date(formValue.start).getDate() > currentDate && this.isResponse) {
            this.isEdited = true;
            this.allowFutureDate = '';
            this.showFutureDateConfirmation = true;
            const test = null;
            this.value = test;
            this.valueChange.emit(test);
            this.formioEvent.emit({ eventName: 'customEvent', data: { value: { test }, type: 'dateRange' } });
            this.dateDifference = moment(formValue.end).diff(moment(formValue.start), 'days');
        }
    }
    ngAfterViewInit() {
        this.dateRangeForm.valueChanges.subscribe(value => {
            console.log('Date form value changes...', value.start, moment(value.start).isAfter(moment()));
            if (value.start && moment(value.start).isAfter(moment(currentDay))) {
                this.showFutureDateConfirmation = true;
                this.allowFutureDate = true;
                if (!this.isResponse) {
                    const test = null;
                    this.value = test;
                    this.valueChange.emit(test);
                    this.formioEvent.emit({ eventName: 'customEvent', data: { value: { test }, type: 'dateRange' } });
                }
            }
            if (new Date(value.start).getDate() === currentDate &&
                new Date(value.start).getMonth() + 1 === new Date().getMonth() + 1) {
                this.allowFutureDate = false;
                this.showFutureDateConfirmation = false;
            }
            else if ((new Date(value.start).getDate() > currentDate ||
                new Date(value.start).getMonth() + 1 > new Date().getMonth() + 1) &&
                this.isResponse) {
                this.allowFutureDate = this.isEdited ? '' : true;
                this.showFutureDateConfirmation = true;
            }
            else {
                this.allowFutureDate = '';
            }
        });
    }
    generateRange(eve, check) {
        if (eve?.key === 'Enter' || eve?.type === 'click') {
            this.assignEndDate(this.dayRange, check);
        }
    }
    checkInput() {
        this.enableBtn = false;
    }
    futureDateConfirmationChange($event) {
        console.log($event.source.name, $event.value);
        if ($event.source.value) {
            this.emitDateRange();
        }
        if (!$event.source.value) {
            this.resetForm();
            this.showFutureDateConfirmation = false;
            this.allowFutureDate = '';
            if (this.isResponse) {
                this.allowFutureDate = false;
            }
            this.daysInput.nativeElement.value = '';
            const test = null;
            this.value = test;
            this.valueChange.emit(test);
            this.formioEvent.emit({ eventName: 'customEvent', data: { value: { test }, type: 'dateRange' } });
        }
    }
    focusoutAssignRange(value) {
        console.log(value);
    }
    startDateChange($event) {
        console.log('start date change...', $event);
    }
    assignEndDate(value, check) {
        this.selectRange.nativeElement.click();
        if (check) {
            this.daysInput.nativeElement.value = '';
        }
        const formValue = this.dateRangeForm.getRawValue();
        console.log('form values...');
        const startDate = formValue.start;
        if (startDate) {
            console.log(startDate);
            const calculatedEndDate = this.addDays(startDate, value);
            this.dateRangeForm.get('end').setValue(calculatedEndDate);
            this.emitDateRange();
        }
    }
    emitDateRange() {
        const formValue = this.dateRangeForm.getRawValue();
        const startDate = formValue.start;
        const endDate = formValue.end;
        const dateRange = {
            startDateKey: this.startDateKey,
            startDate: moment(startDate).format('YYYY-MM-DD'),
            endDateKey: this.endDateKey,
            endDate: moment(endDate).format('YYYY-MM-DD')
        };
        console.log(dateRange);
        this.value = dateRange;
        if (this.allowFutureDate || this.allowFutureDate === false) {
            this.valueChange.emit(dateRange);
            this.formioEvent.emit({ eventName: 'customEvent', data: { value: { dateRange }, type: 'dateRange' } });
        }
        this.enableBtn = true;
        this.dateDifference = moment(formValue.end).diff(moment(formValue.start), 'days');
    }
    addDays(date, days) {
        date = new Date(date);
        date.setDate(date.getDate() + days);
        return date;
    }
    copyStartDate() {
        const formValue = this.dateRangeForm.getRawValue();
        this.copy(formValue.start ? moment(formValue.start).format('MM/DD/YYYY') : 'Start date is empty');
    }
    copyEndDate() {
        const formValue = this.dateRangeForm.getRawValue();
        this.copy(formValue.end ? moment(formValue.end).format('MM/DD/YYYY') : 'End Date is Empty');
    }
    copy(text) {
        navigator.clipboard.writeText(text);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: DateRangeWrapperComponent, deps: [{ token: i1.DynamicTabPageService }, { token: i2.ActivatedRoute }, { token: i3.DataStoreService }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: DateRangeWrapperComponent, selector: "app-date-range-wrapper", inputs: { value: "value", startDateKey: "startDateKey", endDateKey: "endDateKey", disabled: "disabled", minDate: "minDate" }, outputs: { valueChange: "valueChange", formioEvent: "formioEvent" }, viewQueries: [{ propertyName: "rangePicker", first: true, predicate: ["rangePicker"], descendants: true }, { propertyName: "selectRange", first: true, predicate: ["selectRange"], descendants: true }, { propertyName: "daysInput", first: true, predicate: ["daysInput"], descendants: true }], ngImport: i0, template: "<div class=\"w-100\">\r\n  <div class=\"row\">\r\n    <button (click)=\"copyStartDate()\" class=\"btn btn-icon mt-2\" matTooltip=\"Copy Start Date\">\r\n      <em class=\"fa fa-files-o\"></em>\r\n    </button>\r\n    <mat-form-field appearance=\"outline\" class=\"cal-wrp\">\r\n      <mat-date-range-input\r\n        [formGroup]=\"dateRangeForm\"\r\n        [min]=\"minDate\"\r\n        [rangePicker]=\"rangePicker\"\r\n        [disabled]=\"disableInput\"\r\n        (dateInput)=\"startDateChange($event)\">\r\n        <input matStartDate readonly placeholder=\"Start date\" formControlName=\"start\" />\r\n        <input matEndDate readonly placeholder=\"End date\" (dateChange)=\"emitDateRange()\" formControlName=\"end\" />\r\n      </mat-date-range-input>\r\n      <mat-datepicker-toggle matSuffix [for]=\"rangePicker\"></mat-datepicker-toggle>\r\n      <mat-hint>MM/DD/YYYY \u2013 MM/DD/YYYY</mat-hint>\r\n      <mat-date-range-picker #rangePicker>\r\n        <mat-datepicker-actions>\r\n          <div class=\"d-flex flex-column calendar-btn-wrp\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12 col-12\">\r\n                <button class=\"btn-cal\" #selectRange matDateRangePickerApply (click)=\"selectedDateRange()\">\r\n                  Select Range\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <hr class=\"my-1\" />\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12 col-12 date-range\">\r\n                <button (click)=\"assignEndDate(0, true)\" class=\"btn-cal\" [class.cal_active]=\"dateDifference === 0\">\r\n                  0 days\r\n                </button>\r\n                <button (click)=\"assignEndDate(30, true)\" class=\"btn-cal\" [class.cal_active]=\"dateDifference === 30\">\r\n                  30 Days\r\n                </button>\r\n                <button (click)=\"assignEndDate(45, true)\" class=\"btn-cal\" [class.cal_active]=\"dateDifference === 45\">\r\n                  45 Days\r\n                </button>\r\n                <button (click)=\"assignEndDate(60, true)\" class=\"btn-cal\" [class.cal_active]=\"dateDifference === 60\">\r\n                  60 Days\r\n                </button>\r\n                <button (click)=\"assignEndDate(90, true)\" class=\"btn-cal\" [class.cal_active]=\"dateDifference === 90\">\r\n                  90 Days\r\n                </button>\r\n                <button (click)=\"assignEndDate(120, true)\" class=\"btn-cal\" [class.cal_active]=\"dateDifference === 120\">\r\n                  120 Days\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <hr class=\"my-1\" />\r\n            <div class=\"row d-flex justify-content-center\">\r\n              <div class=\"col-12 mt-2 mb-1\">\r\n                <div class=\"text-md-center\">\r\n                  <input\r\n                    min=\"0\"\r\n                    class=\"mr-2\"\r\n                    style=\"width: 60px; height: 17px\"\r\n                    matInput\r\n                    #daysInput\r\n                    type=\"number\"\r\n                    [(ngModel)]=\"dayRange\"\r\n                    (input)=\"checkInput()\"\r\n                    (keyup)=\"generateRange($event, false)\" />\r\n                  <!-- <em class=\"fa fa-check check-btn\" [ngClass]=\"{'disabled': !enableBtn}\"\r\n                  (click)=\"enableBtn && generateRange($event, false)\"></em> -->\r\n                  <button\r\n                    class=\"btn-cal m-md-0\"\r\n                    [ngClass]=\"{ disabled: enableBtn }\"\r\n                    [disabled]=\"enableBtn\"\r\n                    (click)=\"generateRange($event, false)\">\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-datepicker-actions>\r\n      </mat-date-range-picker>\r\n    </mat-form-field>\r\n    <button (click)=\"copyEndDate()\" class=\"btn btn-icon mt-2\" matTooltip=\"Copy End Date\">\r\n      <em class=\"fa fa-files-o\"></em>\r\n    </button>\r\n  </div>\r\n  <div class=\"row pl-4\" *ngIf=\"showFutureDateConfirmation\">\r\n    <label class=\"pr-2\">Do you wish to use a future start date?<span class=\"requiredfield text-danger\">*</span></label>\r\n    <mat-radio-group\r\n      [(ngModel)]=\"allowFutureDate\"\r\n      [disabled]=\"disableInput\"\r\n      (change)=\"futureDateConfirmationChange($event)\">\r\n      <mat-radio-button class=\"pr-2\" [value]=\"true\"> Yes </mat-radio-button>\r\n      <mat-radio-button class=\"pr-2\" [value]=\"false\"> No </mat-radio-button>\r\n    </mat-radio-group>\r\n  </div>\r\n</div>\r\n", styles: [".modal-action-button{width:100px;margin:15px}#myModal{display:block}.modal-content{background-color:#fefefe;margin:auto;padding:10px;border:1px solid #888}.modal-action-button-container{display:inline}.close{font-size:19px!important;position:absolute;top:20px;right:30px;transition:all .2s;font-weight:700;text-decoration:none;color:#333;opacity:.7}.close:hover,.close:focus{text-decoration:none;cursor:pointer}.modal-close{margin-bottom:30px}.overlay{position:fixed;inset:0;background:#0000008f;transition:opacity .5s;z-index:1000}.overlay:target{visibility:visible;opacity:1}.modal{display:block;top:30%;margin:70px auto;width:30%;position:relative;transition:all 5s ease-in-out}p{text-align:center;font-weight:600;margin:20px 0}.btn-cal{background:#f1f3f5;border-radius:4px;color:#4c4f55;border:none;margin:5px;display:inline-block;padding:5px 10px;font-size:12px}.calendar-btn-wrp{width:290px!important;text-align:center}.cal-lb{color:#3f619f;font-size:14px}.cal-wrp{position:relative;transition:0s .85s!important}.cal-wrp .copy-icon{position:absolute;top:0;right:-4px;height:21px;width:20px;outline:none;border:none;background-repeat:no-repeat;background-color:none;background-size:19px 27px;padding:0}.cal-wrp .copy-icon:active{transition:0s!important}.disabled{pointer-events:none;opacity:.5}.cal_active{background-color:var(--sumbmenu-selected)!important}.date-range .btn-cal{background:var(--bg-light)!important;border:1px solid var(--primary)!important;color:var(--primary)!important}.date-range .btn-cal.cal_active{background:var(--btn)!important;color:#fff!important}:host ::ng-deep .mat-form-field-type-mat-date-range-input .mat-form-field-infix{border:none;padding:11px 0}:host ::ng-deep .mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:7px}\n"], dependencies: [{ kind: "directive", type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i5.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i5.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { kind: "directive", type: i5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i5.MinValidator, selector: "input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]", inputs: ["min"] }, { kind: "directive", type: i5.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i5.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i5.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "component", type: i6.MatDatepickerToggle, selector: "mat-datepicker-toggle", inputs: ["for", "tabIndex", "aria-label", "disabled", "disableRipple"], exportAs: ["matDatepickerToggle"] }, { kind: "component", type: i6.MatDateRangeInput, selector: "mat-date-range-input", inputs: ["rangePicker", "required", "dateFilter", "min", "max", "disabled", "separator", "comparisonStart", "comparisonEnd"], exportAs: ["matDateRangeInput"] }, { kind: "directive", type: i6.MatStartDate, selector: "input[matStartDate]", inputs: ["errorStateMatcher"], outputs: ["dateChange", "dateInput"] }, { kind: "directive", type: i6.MatEndDate, selector: "input[matEndDate]", inputs: ["errorStateMatcher"], outputs: ["dateChange", "dateInput"] }, { kind: "component", type: i6.MatDateRangePicker, selector: "mat-date-range-picker", exportAs: ["matDateRangePicker"] }, { kind: "component", type: i6.MatDatepickerActions, selector: "mat-datepicker-actions, mat-date-range-picker-actions" }, { kind: "directive", type: i6.MatDatepickerApply, selector: "[matDatepickerApply], [matDateRangePickerApply]" }, { kind: "directive", type: i7.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { kind: "component", type: i8.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i8.MatHint, selector: "mat-hint", inputs: ["align", "id"] }, { kind: "directive", type: i8.MatSuffix, selector: "[matSuffix], [matIconSuffix], [matTextSuffix]", inputs: ["matTextSuffix"] }, { kind: "directive", type: i9.MatRadioGroup, selector: "mat-radio-group", exportAs: ["matRadioGroup"] }, { kind: "component", type: i9.MatRadioButton, selector: "mat-radio-button", inputs: ["disableRipple", "tabIndex"], exportAs: ["matRadioButton"] }, { kind: "directive", type: i10.MatTooltip, selector: "[matTooltip]", exportAs: ["matTooltip"] }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: DateRangeWrapperComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-date-range-wrapper', template: "<div class=\"w-100\">\r\n  <div class=\"row\">\r\n    <button (click)=\"copyStartDate()\" class=\"btn btn-icon mt-2\" matTooltip=\"Copy Start Date\">\r\n      <em class=\"fa fa-files-o\"></em>\r\n    </button>\r\n    <mat-form-field appearance=\"outline\" class=\"cal-wrp\">\r\n      <mat-date-range-input\r\n        [formGroup]=\"dateRangeForm\"\r\n        [min]=\"minDate\"\r\n        [rangePicker]=\"rangePicker\"\r\n        [disabled]=\"disableInput\"\r\n        (dateInput)=\"startDateChange($event)\">\r\n        <input matStartDate readonly placeholder=\"Start date\" formControlName=\"start\" />\r\n        <input matEndDate readonly placeholder=\"End date\" (dateChange)=\"emitDateRange()\" formControlName=\"end\" />\r\n      </mat-date-range-input>\r\n      <mat-datepicker-toggle matSuffix [for]=\"rangePicker\"></mat-datepicker-toggle>\r\n      <mat-hint>MM/DD/YYYY \u2013 MM/DD/YYYY</mat-hint>\r\n      <mat-date-range-picker #rangePicker>\r\n        <mat-datepicker-actions>\r\n          <div class=\"d-flex flex-column calendar-btn-wrp\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12 col-12\">\r\n                <button class=\"btn-cal\" #selectRange matDateRangePickerApply (click)=\"selectedDateRange()\">\r\n                  Select Range\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <hr class=\"my-1\" />\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12 col-12 date-range\">\r\n                <button (click)=\"assignEndDate(0, true)\" class=\"btn-cal\" [class.cal_active]=\"dateDifference === 0\">\r\n                  0 days\r\n                </button>\r\n                <button (click)=\"assignEndDate(30, true)\" class=\"btn-cal\" [class.cal_active]=\"dateDifference === 30\">\r\n                  30 Days\r\n                </button>\r\n                <button (click)=\"assignEndDate(45, true)\" class=\"btn-cal\" [class.cal_active]=\"dateDifference === 45\">\r\n                  45 Days\r\n                </button>\r\n                <button (click)=\"assignEndDate(60, true)\" class=\"btn-cal\" [class.cal_active]=\"dateDifference === 60\">\r\n                  60 Days\r\n                </button>\r\n                <button (click)=\"assignEndDate(90, true)\" class=\"btn-cal\" [class.cal_active]=\"dateDifference === 90\">\r\n                  90 Days\r\n                </button>\r\n                <button (click)=\"assignEndDate(120, true)\" class=\"btn-cal\" [class.cal_active]=\"dateDifference === 120\">\r\n                  120 Days\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <hr class=\"my-1\" />\r\n            <div class=\"row d-flex justify-content-center\">\r\n              <div class=\"col-12 mt-2 mb-1\">\r\n                <div class=\"text-md-center\">\r\n                  <input\r\n                    min=\"0\"\r\n                    class=\"mr-2\"\r\n                    style=\"width: 60px; height: 17px\"\r\n                    matInput\r\n                    #daysInput\r\n                    type=\"number\"\r\n                    [(ngModel)]=\"dayRange\"\r\n                    (input)=\"checkInput()\"\r\n                    (keyup)=\"generateRange($event, false)\" />\r\n                  <!-- <em class=\"fa fa-check check-btn\" [ngClass]=\"{'disabled': !enableBtn}\"\r\n                  (click)=\"enableBtn && generateRange($event, false)\"></em> -->\r\n                  <button\r\n                    class=\"btn-cal m-md-0\"\r\n                    [ngClass]=\"{ disabled: enableBtn }\"\r\n                    [disabled]=\"enableBtn\"\r\n                    (click)=\"generateRange($event, false)\">\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-datepicker-actions>\r\n      </mat-date-range-picker>\r\n    </mat-form-field>\r\n    <button (click)=\"copyEndDate()\" class=\"btn btn-icon mt-2\" matTooltip=\"Copy End Date\">\r\n      <em class=\"fa fa-files-o\"></em>\r\n    </button>\r\n  </div>\r\n  <div class=\"row pl-4\" *ngIf=\"showFutureDateConfirmation\">\r\n    <label class=\"pr-2\">Do you wish to use a future start date?<span class=\"requiredfield text-danger\">*</span></label>\r\n    <mat-radio-group\r\n      [(ngModel)]=\"allowFutureDate\"\r\n      [disabled]=\"disableInput\"\r\n      (change)=\"futureDateConfirmationChange($event)\">\r\n      <mat-radio-button class=\"pr-2\" [value]=\"true\"> Yes </mat-radio-button>\r\n      <mat-radio-button class=\"pr-2\" [value]=\"false\"> No </mat-radio-button>\r\n    </mat-radio-group>\r\n  </div>\r\n</div>\r\n", styles: [".modal-action-button{width:100px;margin:15px}#myModal{display:block}.modal-content{background-color:#fefefe;margin:auto;padding:10px;border:1px solid #888}.modal-action-button-container{display:inline}.close{font-size:19px!important;position:absolute;top:20px;right:30px;transition:all .2s;font-weight:700;text-decoration:none;color:#333;opacity:.7}.close:hover,.close:focus{text-decoration:none;cursor:pointer}.modal-close{margin-bottom:30px}.overlay{position:fixed;inset:0;background:#0000008f;transition:opacity .5s;z-index:1000}.overlay:target{visibility:visible;opacity:1}.modal{display:block;top:30%;margin:70px auto;width:30%;position:relative;transition:all 5s ease-in-out}p{text-align:center;font-weight:600;margin:20px 0}.btn-cal{background:#f1f3f5;border-radius:4px;color:#4c4f55;border:none;margin:5px;display:inline-block;padding:5px 10px;font-size:12px}.calendar-btn-wrp{width:290px!important;text-align:center}.cal-lb{color:#3f619f;font-size:14px}.cal-wrp{position:relative;transition:0s .85s!important}.cal-wrp .copy-icon{position:absolute;top:0;right:-4px;height:21px;width:20px;outline:none;border:none;background-repeat:no-repeat;background-color:none;background-size:19px 27px;padding:0}.cal-wrp .copy-icon:active{transition:0s!important}.disabled{pointer-events:none;opacity:.5}.cal_active{background-color:var(--sumbmenu-selected)!important}.date-range .btn-cal{background:var(--bg-light)!important;border:1px solid var(--primary)!important;color:var(--primary)!important}.date-range .btn-cal.cal_active{background:var(--btn)!important;color:#fff!important}:host ::ng-deep .mat-form-field-type-mat-date-range-input .mat-form-field-infix{border:none;padding:11px 0}:host ::ng-deep .mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:7px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.DynamicTabPageService }, { type: i2.ActivatedRoute }, { type: i3.DataStoreService }]; }, propDecorators: { value: [{
                type: Input
            }], startDateKey: [{
                type: Input
            }], endDateKey: [{
                type: Input
            }], valueChange: [{
                type: Output
            }], disabled: [{
                type: Input
            }], minDate: [{
                type: Input
            }], formioEvent: [{
                type: Output
            }], rangePicker: [{
                type: ViewChild,
                args: ['rangePicker']
            }], selectRange: [{
                type: ViewChild,
                args: ['selectRange']
            }], daysInput: [{
                type: ViewChild,
                args: ['daysInput']
            }] } });
//# sourceMappingURL=data:application/json;base64,