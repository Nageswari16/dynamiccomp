import { Component, Input } from '@angular/core';
import { options } from './options';
import { DynamicSearchComponent } from '../dynamic-search/dynamic-search.component';
import { selectAllGridsterItems } from '../@shared/master-view-state/master-view.selectors';
import { clearComponents, setComponents } from '../@shared/master-view-state/master-view.actions';
import { AlertService } from '../@core/service/alert.service';
import { DynamicPageCleanupComponent } from '../dynamic-tab-page/dynamic-pagecleanup/dynamic-pagecleanup.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "../@core/service/dynamic-tab-page-service";
import * as i3 from "@ngrx/store";
import * as i4 from "@angular/common";
import * as i5 from "angular-gridster2";
import * as i6 from "ng-dynamic-component";
import * as i7 from "../@shared/alert/alert.component";
export class MasterViewComponent {
    route;
    dynamicTabPageService;
    store;
    options;
    masterViewWidget$;
    masterPageId;
    alertService;
    editMode = true;
    constructor(injector, route, dynamicTabPageService, store) {
        this.route = route;
        this.dynamicTabPageService = dynamicTabPageService;
        this.store = store;
        this.options = options;
        this.alertService = injector.get(AlertService);
        this.masterViewWidget$ = this.store.select(selectAllGridsterItems);
    }
    ngOnInit() {
        this.masterPageId = this.route.snapshot.paramMap.get('masterPageId');
        if (window.location.pathname.includes('master-view/view')) {
            this.editMode = false;
        }
        this.getDynamicPage(this.masterPageId);
    }
    getDynamicPage(masterPageId) {
        this.dynamicTabPageService.getDynamicPage(masterPageId).subscribe(value => {
            const activeversionid = value['data'][0].activeversionid;
            this.dynamicTabPageService.getActivePage(activeversionid, this.editMode).subscribe(result => {
                if (result) {
                    const masterviewconfig = typeof result['data'].masterviewconfig === 'string'
                        ? JSON.parse(result['data'].masterviewconfig)
                        : result['data'].masterviewconfig;
                    if (masterviewconfig) {
                        masterviewconfig.forEach(x => {
                            x.loadedFromMasterView = true;
                            x.input = { ...x.input, componentId: x.id };
                            if (x.componentName === 'dynamicpage-common') {
                                x.component = DynamicPageCleanupComponent;
                            }
                            else if (x.componentName === 'dynamicpage-sea') {
                                x.component = DynamicSearchComponent;
                            }
                        });
                        this.store.dispatch(setComponents({ components: masterviewconfig }));
                    }
                }
            });
        }, error => {
            this.alertService.error('Something went wrong');
            console.error(error);
        });
    }
    ngAfterViewInit() {
        this.route.paramMap.subscribe(() => {
            this.masterPageId = this.route.snapshot.paramMap.get('masterPageId');
            this.getDynamicPage(this.masterPageId);
        });
    }
    ngOnDestroy() {
        this.store.dispatch(clearComponents());
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: MasterViewComponent, deps: [{ token: i0.Injector }, { token: i1.ActivatedRoute }, { token: i2.DynamicTabPageService }, { token: i3.Store }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: MasterViewComponent, selector: "app-master-view", inputs: { masterPageId: "masterPageId" }, ngImport: i0, template: "<app-alert></app-alert>\r\n<div class=\"float-container\">\r\n  <div class=\"float-child-right\">\r\n    <div class=\"dashboard-inner mt-0\">\r\n      <div class=\"float-child-right\">\r\n        <gridster class=\"gridster\" [options]=\"options\">\r\n          <gridster-item class=\"gridster-item\" [item]=\"item\"\r\n            *ngFor=\"let item of masterViewWidget$ | async; let i = index\">\r\n            <div class=\"clearfix gridster-item-group\">\r\n              <div class=\"gridster-item-content\">\r\n                <!-- <div class=\"drag-handler widget-header p-2 mb-2\">\r\n                  <div class=\"item-buttons widget-header-buttons w-100\">\r\n                    <h6 class=\"mb-0\">{{ item.name }}</h6>\r\n                  </div>\r\n                </div>-->\r\n                <ndc-dynamic [ndcDynamicComponent]=\"item.component\" [ndcDynamicInputs]=\"item.input\"> </ndc-dynamic>\r\n              </div>\r\n            </div>\r\n          </gridster-item>\r\n        </gridster>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>", styles: [".float-container .float-child-right{max-height:calc(100vh - 280px);overflow-y:auto}.float-container .float-child-right .close-button{position:absolute;top:2px;right:5px;cursor:pointer;color:#007cc3}.float-container .float-child-right .overallSec{padding-left:0}.float-container .gridster{display:inline-table;background:transparent;padding:0!important}.float-container .gridster-item{margin:0 0 15px!important;padding:0 12px 12px;overflow-y:auto}.float-container .gridster-item-content{position:relative}.pull-right{padding:5px}.gridster{height:120vh;margin:0;padding:0;background-color:#b3b1b1}.gridster-container{margin-top:10px;margin-left:10px}.top-btn-left{width:150px;margin:5px}.top-btn-right{width:350px;margin:5px}.widget-header{background-color:#eee;cursor:default}.widget-header-btn{cursor:pointer}.header-margin-left{margin-left:5px}.header-margin-right{margin-right:5px}app-nomination-widget{height:100%}.widget-header-buttons{display:flex;align-items:center;justify-content:space-between}.widget-header-buttons h6{font-size:12px;text-transform:uppercase;font-weight:600;color:#2c2863}\n"], dependencies: [{ kind: "directive", type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "component", type: i5.GridsterComponent, selector: "gridster", inputs: ["options"] }, { kind: "component", type: i5.GridsterItemComponent, selector: "gridster-item", inputs: ["item"], outputs: ["itemInit", "itemChange", "itemResize"] }, { kind: "directive", type: i6.DynamicIoDirective, selector: "[ndcDynamicInputs],[ndcDynamicOutputs]", inputs: ["ndcDynamicInputs", "ndcDynamicOutputs"], exportAs: ["ndcDynamicIo"] }, { kind: "component", type: i6.DynamicComponent, selector: "ndc-dynamic", inputs: ["ndcDynamicComponent", "ndcDynamicInjector", "ndcDynamicProviders", "ndcDynamicContent", "ndcDynamicNgModuleRef", "ndcDynamicEnvironmentInjector"], outputs: ["ndcDynamicCreated"] }, { kind: "component", type: i7.AlertComponent, selector: "app-alert" }, { kind: "pipe", type: i4.AsyncPipe, name: "async" }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: MasterViewComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-master-view', template: "<app-alert></app-alert>\r\n<div class=\"float-container\">\r\n  <div class=\"float-child-right\">\r\n    <div class=\"dashboard-inner mt-0\">\r\n      <div class=\"float-child-right\">\r\n        <gridster class=\"gridster\" [options]=\"options\">\r\n          <gridster-item class=\"gridster-item\" [item]=\"item\"\r\n            *ngFor=\"let item of masterViewWidget$ | async; let i = index\">\r\n            <div class=\"clearfix gridster-item-group\">\r\n              <div class=\"gridster-item-content\">\r\n                <!-- <div class=\"drag-handler widget-header p-2 mb-2\">\r\n                  <div class=\"item-buttons widget-header-buttons w-100\">\r\n                    <h6 class=\"mb-0\">{{ item.name }}</h6>\r\n                  </div>\r\n                </div>-->\r\n                <ndc-dynamic [ndcDynamicComponent]=\"item.component\" [ndcDynamicInputs]=\"item.input\"> </ndc-dynamic>\r\n              </div>\r\n            </div>\r\n          </gridster-item>\r\n        </gridster>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>", styles: [".float-container .float-child-right{max-height:calc(100vh - 280px);overflow-y:auto}.float-container .float-child-right .close-button{position:absolute;top:2px;right:5px;cursor:pointer;color:#007cc3}.float-container .float-child-right .overallSec{padding-left:0}.float-container .gridster{display:inline-table;background:transparent;padding:0!important}.float-container .gridster-item{margin:0 0 15px!important;padding:0 12px 12px;overflow-y:auto}.float-container .gridster-item-content{position:relative}.pull-right{padding:5px}.gridster{height:120vh;margin:0;padding:0;background-color:#b3b1b1}.gridster-container{margin-top:10px;margin-left:10px}.top-btn-left{width:150px;margin:5px}.top-btn-right{width:350px;margin:5px}.widget-header{background-color:#eee;cursor:default}.widget-header-btn{cursor:pointer}.header-margin-left{margin-left:5px}.header-margin-right{margin-right:5px}app-nomination-widget{height:100%}.widget-header-buttons{display:flex;align-items:center;justify-content:space-between}.widget-header-buttons h6{font-size:12px;text-transform:uppercase;font-weight:600;color:#2c2863}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i1.ActivatedRoute }, { type: i2.DynamicTabPageService }, { type: i3.Store }]; }, propDecorators: { masterPageId: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,