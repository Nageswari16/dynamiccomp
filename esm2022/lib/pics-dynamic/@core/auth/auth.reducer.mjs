import { authLogin, authLoginFailure, authLoginSuccess, authLogout } from './auth.actions';
import { createReducer, on } from '@ngrx/store';
export const initialState = {
    isAuthenticated: false,
    pages: []
};
const reducer = createReducer(initialState, on(authLogin, state => ({
    ...state,
    loading: true,
    error: null,
    isAuthenticated: false
})), on(authLoginSuccess, (state, { isAuthenticated }) => {
    console.log(isAuthenticated);
    return {
        ...state,
        loading: false,
        isAuthenticated,
        error: null
    };
}), on(authLoginFailure, (state, { isAuthenticated, error }) => ({
    ...state,
    loading: false,
    isAuthenticated,
    error
})), on(authLogout, state => ({
    ...state,
    loading: false,
    error: null,
    isAuthenticated: false
})));
export function authReducer(state, action) {
    return reducer(state, action);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC5yZWR1Y2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvcGljcy1jb3JlL2R5bmFtaWMvc3JjL2xpYi9waWNzLWR5bmFtaWMvQGNvcmUvYXV0aC9hdXRoLnJlZHVjZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRSxnQkFBZ0IsRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUMzRixPQUFPLEVBQVUsYUFBYSxFQUFFLEVBQUUsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUV4RCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQWM7SUFDckMsZUFBZSxFQUFFLEtBQUs7SUFDdEIsS0FBSyxFQUFFLEVBQUU7Q0FDVixDQUFDO0FBRUYsTUFBTSxPQUFPLEdBQUcsYUFBYSxDQUMzQixZQUFZLEVBQ1osRUFBRSxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDdEIsR0FBRyxLQUFLO0lBQ1IsT0FBTyxFQUFFLElBQUk7SUFDYixLQUFLLEVBQUUsSUFBSTtJQUNYLGVBQWUsRUFBRSxLQUFLO0NBQ3ZCLENBQUMsQ0FBQyxFQUNILEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLGVBQWUsRUFBRSxFQUFFLEVBQUU7SUFDbEQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUM3QixPQUFPO1FBQ0wsR0FBRyxLQUFLO1FBQ1IsT0FBTyxFQUFFLEtBQUs7UUFDZCxlQUFlO1FBQ2YsS0FBSyxFQUFFLElBQUk7S0FDWixDQUFDO0FBQ0osQ0FBQyxDQUFDLEVBQ0YsRUFBRSxDQUFDLGdCQUFnQixFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsZUFBZSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQzNELEdBQUcsS0FBSztJQUNSLE9BQU8sRUFBRSxLQUFLO0lBQ2QsZUFBZTtJQUNmLEtBQUs7Q0FDTixDQUFDLENBQUMsRUFDSCxFQUFFLENBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUN2QixHQUFHLEtBQUs7SUFDUixPQUFPLEVBQUUsS0FBSztJQUNkLEtBQUssRUFBRSxJQUFJO0lBQ1gsZUFBZSxFQUFFLEtBQUs7Q0FDdkIsQ0FBQyxDQUFDLENBQ0osQ0FBQztBQUVGLE1BQU0sVUFBVSxXQUFXLENBQUMsS0FBNEIsRUFBRSxNQUFjO0lBQ3RFLE9BQU8sT0FBTyxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztBQUNoQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXV0aFN0YXRlIH0gZnJvbSAnLi9hdXRoLm1vZGVscyc7XHJcbmltcG9ydCB7IGF1dGhMb2dpbiwgYXV0aExvZ2luRmFpbHVyZSwgYXV0aExvZ2luU3VjY2VzcywgYXV0aExvZ291dCB9IGZyb20gJy4vYXV0aC5hY3Rpb25zJztcclxuaW1wb3J0IHsgQWN0aW9uLCBjcmVhdGVSZWR1Y2VyLCBvbiB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcclxuXHJcbmV4cG9ydCBjb25zdCBpbml0aWFsU3RhdGU6IEF1dGhTdGF0ZSA9IHtcclxuICBpc0F1dGhlbnRpY2F0ZWQ6IGZhbHNlLFxyXG4gIHBhZ2VzOiBbXVxyXG59O1xyXG5cclxuY29uc3QgcmVkdWNlciA9IGNyZWF0ZVJlZHVjZXIoXHJcbiAgaW5pdGlhbFN0YXRlLFxyXG4gIG9uKGF1dGhMb2dpbiwgc3RhdGUgPT4gKHtcclxuICAgIC4uLnN0YXRlLFxyXG4gICAgbG9hZGluZzogdHJ1ZSxcclxuICAgIGVycm9yOiBudWxsLFxyXG4gICAgaXNBdXRoZW50aWNhdGVkOiBmYWxzZVxyXG4gIH0pKSxcclxuICBvbihhdXRoTG9naW5TdWNjZXNzLCAoc3RhdGUsIHsgaXNBdXRoZW50aWNhdGVkIH0pID0+IHtcclxuICAgIGNvbnNvbGUubG9nKGlzQXV0aGVudGljYXRlZCk7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAuLi5zdGF0ZSxcclxuICAgICAgbG9hZGluZzogZmFsc2UsXHJcbiAgICAgIGlzQXV0aGVudGljYXRlZCxcclxuICAgICAgZXJyb3I6IG51bGxcclxuICAgIH07XHJcbiAgfSksXHJcbiAgb24oYXV0aExvZ2luRmFpbHVyZSwgKHN0YXRlLCB7IGlzQXV0aGVudGljYXRlZCwgZXJyb3IgfSkgPT4gKHtcclxuICAgIC4uLnN0YXRlLFxyXG4gICAgbG9hZGluZzogZmFsc2UsXHJcbiAgICBpc0F1dGhlbnRpY2F0ZWQsXHJcbiAgICBlcnJvclxyXG4gIH0pKSxcclxuICBvbihhdXRoTG9nb3V0LCBzdGF0ZSA9PiAoe1xyXG4gICAgLi4uc3RhdGUsXHJcbiAgICBsb2FkaW5nOiBmYWxzZSxcclxuICAgIGVycm9yOiBudWxsLFxyXG4gICAgaXNBdXRoZW50aWNhdGVkOiBmYWxzZVxyXG4gIH0pKVxyXG4pO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGF1dGhSZWR1Y2VyKHN0YXRlOiBBdXRoU3RhdGUgfCB1bmRlZmluZWQsIGFjdGlvbjogQWN0aW9uKTogQXV0aFN0YXRlIHtcclxuICByZXR1cm4gcmVkdWNlcihzdGF0ZSwgYWN0aW9uKTtcclxufVxyXG4iXX0=