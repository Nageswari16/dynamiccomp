import { DoCheck, Injector, OnDestroy, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { DynamicTabPageService } from '../@core/service/dynamic-tab-page-service';
import { MenuItem } from 'primeng/api';
import { LocalService } from '../@core/service/local.service';
import { DynamicsearchService } from '../@core/service/dynamicsearch.service';
import { LocalStorageService } from '../@core/local-storage/local-storage.service';
import { DataStoreService } from '../@core/service/data-store.service';
import { Subscription } from 'rxjs';
import { DataService } from '../@core/service/dynamic-ribbon-data.service';
import { SharedService } from '../@core/service/shared.service';
import * as i0 from "@angular/core";
export declare class DynamicRibbonComponent implements OnInit, DoCheck, OnDestroy {
    private route;
    private router;
    private dynamicTabPageService;
    private storageService;
    private data;
    private _storeservice;
    private sharedService;
    item: any;
    tabPageId: any;
    tabList: MenuItem[];
    originalTabList: MenuItem[];
    navigateData: any;
    currentRouterLink: string;
    toggleMobileSidebar: any;
    selectedIndex: any;
    parentGridPage: any;
    localstorage: LocalService;
    tabpageData: any;
    dynamicSearchService: DynamicsearchService;
    dynamicRibbonData: any;
    ribbonPageData: any;
    activeItem: MenuItem;
    settingInfo: any;
    dataStoreService: DataStoreService;
    searchTerm: string;
    selectedSubTabIndex: any;
    selectedTabName: string;
    selectedSubTabName: string;
    ribbonConfig: any;
    sourceKey: string;
    sourceValue: string;
    sourceType: string;
    selectedPageId: string;
    pageIdSubscription: Subscription;
    private tabIndexCounter;
    private tabSubIndexCounter;
    private lastPageID;
    tabactionName: string;
    selectedTab: any;
    selectedSubTab: any;
    constructor(injector: Injector, route: ActivatedRoute, router: Router, dynamicTabPageService: DynamicTabPageService, storageService: LocalStorageService, data: DataService, _storeservice: DataStoreService, sharedService: SharedService);
    ngOnInit(): void;
    ngDoCheck(): void;
    activateTabByPageID(pageID: string): void;
    getDynamicTab(): Promise<void>;
    mapTab(page: any): MenuItem;
    mapChildTabs(childTabs: any[]): MenuItem[];
    checkParams(element: any): any;
    getRibbonPage(ribbonid: any): void;
    setActiveVersionsAndRoutes(page: any, level: number): Promise<void>;
    getItemsAtLevel(level: number): MenuItem[];
    setRouterLink(items: MenuItem[], pageId: any, routerLink: string): void;
    onTabItemClick(tab: any, subTab?: any): void;
    tabRoutingLink(tab: any): void;
    onVerticalTabItemClick(tab: any, index: any): void;
    redirect(): void;
    backToMain(): void;
    ngOnDestroy(): void;
    getDateFormat(value: any): any;
    clearSearch(): void;
    dynamicRibbonActive(pageId: string): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicRibbonComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicRibbonComponent, "app-dynamic-ribbon", never, { "tabPageId": { "alias": "tabPageId"; "required": false; }; }, {}, never, never, false, never>;
}
