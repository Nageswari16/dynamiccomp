import { Injector, OnChanges, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { DynamicTabPageService } from '../../@core/service/dynamic-tab-page-service';
import { DataService } from '../../@core/service/dynamic-ribbon-data.service';
import { AppService } from '../../@core/service/app.service';
import * as i0 from "@angular/core";
export declare class DynamicRibbonPageComponent implements OnInit, OnChanges {
    private dynamicTabPageService;
    private router;
    private route;
    private data;
    private appService;
    tabOrientation: any;
    dynamicRibbonData: any;
    ribbonData: any;
    selectedTabName: any;
    selectedSubTabIndex: any;
    settingInfo: any;
    ribbonConfig: any;
    headerValues: any;
    contentValues: any[];
    customValues: any;
    youthId: number;
    alertCount: number;
    riskValue: string;
    status: any;
    age: any;
    youth_pic: any;
    showJcp: boolean;
    oyaWorker: boolean;
    constructor(dynamicTabPageService: DynamicTabPageService, injector: Injector, router: Router, route: ActivatedRoute, data: DataService, appService: AppService);
    ngOnChanges(): void;
    ngOnInit(): void;
    initilizeValue(): void;
    calculateAge(dateOfBirth: any): number | "";
    getActiveWarrent(activeWarrent: any): boolean;
    getDateFormat(value: any, data: any): any;
    routePages(data: any): void;
    viewImage(event: any): void;
    getRibbonData(dynamicRibbonData: any, column: any): any;
    capitalizeFirstLetter(string: any): any;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicRibbonPageComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DynamicRibbonPageComponent, "app-dynamic-ribbon-page", never, { "tabOrientation": { "alias": "tabOrientation"; "required": false; }; "dynamicRibbonData": { "alias": "dynamicRibbonData"; "required": false; }; "ribbonData": { "alias": "ribbonData"; "required": false; }; "selectedTabName": { "alias": "selectedTabName"; "required": false; }; "selectedSubTabIndex": { "alias": "selectedSubTabIndex"; "required": false; }; "settingInfo": { "alias": "settingInfo"; "required": false; }; "ribbonConfig": { "alias": "ribbonConfig"; "required": false; }; }, {}, never, never, false, never>;
}
