import { AfterViewChecked, ElementRef, EventEmitter, Injector, OnInit } from '@angular/core';
import { FormBuilder, UntypedFormGroup } from '@angular/forms';
import { FormioCustomComponent, FormioEvent } from '../../@shared/custom-component/elements.common';
import { LocalService } from '../../@core/service/local.service';
import { HttpService } from '../../@core/service/http.service';
import { LoaderService } from '../../@core/service/loader.service';
import { AlertService } from '../../@core/service/alert.service';
import { DataStoreService } from '../../@core/service/data-store.service';
import * as i0 from "@angular/core";
export interface DateRange {
    startDateKey: string;
    startDate: string;
    endDateKey: string;
    endDate: string;
}
export declare class YouthFileUploadWrapperComponent implements FormioCustomComponent<any>, OnInit, AfterViewChecked {
    private localStoreService;
    private formBuilder;
    private httpService;
    private _storeservice;
    value: any;
    label: string;
    valueChange: EventEmitter<any>;
    formioEvent: EventEmitter<FormioEvent>;
    fileInput: ElementRef;
    display: boolean;
    photoTypeList: any;
    documentUploadForm: UntypedFormGroup;
    alertService: AlertService;
    imageHeight: number;
    imageWidth: number;
    fileName: any;
    fileSize: any;
    isImageUploaded: boolean;
    fileNamePath: string;
    imgUrl: any;
    imgUrl2: any;
    loaderService: LoaderService;
    fileSizeRaw: number;
    youthId: string;
    setDescirptionText: string;
    isViewMode: boolean;
    sharedInfo: any;
    youthPhotoService: any;
    authService: any;
    maxDate: any;
    constructor(injector: Injector, localStoreService: LocalService, formBuilder: FormBuilder, httpService: HttpService, _storeservice: DataStoreService);
    disabled: boolean;
    ngOnInit(): void;
    ngAfterViewChecked(): void;
    showPopup(): Promise<void>;
    initializeDocumentUploadForm(): void;
    uploadFile(fileValue: any): void;
    validateDocument(file: any): Promise<boolean>;
    resetData(): void;
    getFileSize(fileSize: any): string;
    clearImage(): void;
    sendDocument(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<YouthFileUploadWrapperComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<YouthFileUploadWrapperComponent, "app-youth-file-upload-wrapper", never, { "value": { "alias": "value"; "required": false; }; "label": { "alias": "label"; "required": false; }; }, { "valueChange": "valueChange"; "formioEvent": "formioEvent"; }, never, never, false, never>;
}
